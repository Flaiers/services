import database
import kb

from aiogram import types
from aiogram.dispatcher import FSMContext
from config import admin_id
from load_all import dp, bot
from states import NewCity, Document
from database import Item, Price


@dp.message_handler(user_id=admin_id, commands=['admin'])
async def admin(message: types.Message):
    await message.answer('–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∫–æ–º–∞–Ω–¥:\n'
        '/add_city ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥, –∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –Ω—ë–º\n'
        '/add_price ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç\n'
        '/cancel ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î –≥–æ—Ä–æ–¥–∞\n\n'
        '–°–ø–∏—Å–æ–∫ —Ç–µ—Ä–º–∏–Ω–æ–≤:\n'
        '        –ë–î ‚Äî –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ, –æ—Ç–∫—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –±–µ—Ä—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n'
        '        –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Å–ª–µ–¥—É—é—â–∏—Ö\n'
        '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Äî –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–∑–∞–¥ –∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä\n'
        'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ ‚Äî –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –ë–î')


@dp.message_handler(user_id=admin_id, commands=['cancel'], state=NewCity)
async def cancel(message: types.Message, state: FSMContext):
    await message.answer('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ')
    await state.reset_state()


@dp.message_handler(user_id=admin_id, commands=['add_price'])
async def add_price(message: types.Message):
	await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç–∞—Ç—å—é telegra.ph'
		'\n–•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É',
		reply_markup=kb.reply_back)
	await Document.price.set()


@dp.message_handler(user_id=admin_id, state=Document.price)
async def enter_price(message: types.Message, state: FSMContext):
	url = message.text
	if url == 'üîô –ù–∞–∑–∞–¥':
		await message.answer('–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∫–æ–º–∞–Ω–¥:\n'
		'/add_city ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥, –∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –Ω—ë–º\n'
		'/add_price ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç\n'
		'/cancel ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î –≥–æ—Ä–æ–¥–∞\n\n'
		'–°–ø–∏—Å–æ–∫ —Ç–µ—Ä–º–∏–Ω–æ–≤:\n'
		'        –ë–î ‚Äî –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–æ, –æ—Ç–∫—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –±–µ—Ä—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n'
		'        –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Å–ª–µ–¥—É—é—â–∏—Ö\n'
		'‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å ‚Äî –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–∑–∞–¥ –∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä\n'
		'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ ‚Äî –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –ë–î')
		await state.reset_state()
	else:
		price = Price()
		price.url = url

		await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
			'–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')

		await state.update_data(price=price)
		await price.create()
		data = await state.get_data()
		price: Price = data.get('price')
		await state.reset_state()


@dp.message_handler(user_id=admin_id, commands=['add_city'])
async def add_city(message: types.Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /cancel')
    await NewCity.city.set()


@dp.message_handler(user_id=admin_id, state=NewCity.city)
async def enter_city(message: types.Message, state: FSMContext):
    city = message.text
    item = Item()
    item.city = city

    await message.answer(f'–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ {city}\n'
        '–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∏–¥ —É—Å–ª—É–≥–∏ ‚Ññ1, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –ø—Ä–∏—à–ª–∏—Ç–µ –ø–æ –ø–æ—Ä—è–¥–∫—É\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

    await NewCity.service1.set()
    await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.service1)
async def enter_service1(message: types.Message, state: FSMContext):
    service1 = message.text
    if service1 == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å–Ω–æ–≤–∞')
        await NewCity.city.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.service1 = service1

        await message.answer(f'–£—Å–ª—É–≥–∞ {service1} –¥–æ–±–∞–≤–ª–µ–Ω–∞\n'
            '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É ‚Ññ2, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –º–Ω–µ. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ ‚Ññ1, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.service2.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.service2)
async def enter_service2(message: types.Message, state: FSMContext):
    service2 = message.text
    if service2 == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service1}')
        await NewCity.executor11_name.set()
        await state.update_data(item=item)
    elif service2 == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∏–¥ —É—Å–ª—É–≥–∏ ‚Ññ1 —Å–Ω–æ–≤–∞')
        await NewCity.service1.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.service2 = service2

        await message.answer(f'–£—Å–ª—É–≥–∞ {service2} –¥–æ–±–∞–≤–ª–µ–Ω–∞\n'
            '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É ‚Ññ3, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –º–Ω–µ. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ ‚Ññ2, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.service3.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.service3)
async def enter_service3(message: types.Message, state: FSMContext):
    service3 = message.text
    if service3 == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service1}')
        await NewCity.executor11_name.set()
        await state.update_data(item=item)
    elif service3 == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∏–¥ —É—Å–ª—É–≥–∏ ‚Ññ2 —Å–Ω–æ–≤–∞')
        await NewCity.service2.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.service3 = service3

        await message.answer(f'–£—Å–ª—É–≥–∞ {service3} –¥–æ–±–∞–≤–ª–µ–Ω–∞\n'
            '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É ‚Ññ4, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –º–Ω–µ. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ ‚Ññ3, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.service4.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.service4)
async def enter_service4(message: types.Message, state: FSMContext):
    service4 = message.text
    if service4 == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service1}')
        await NewCity.executor11_name.set()
        await state.update_data(item=item)
    elif service4 == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∏–¥ —É—Å–ª—É–≥–∏ ‚Ññ3 —Å–Ω–æ–≤–∞')
        await NewCity.service3.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.service4 = service4

        await message.answer(f'–£—Å–ª—É–≥–∞ {service4} –¥–æ–±–∞–≤–ª–µ–Ω–∞\n'
            '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É ‚Ññ5, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –º–Ω–µ. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ ‚Ññ4, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.service5.set()
        await state.update_data(item=item)

@dp.message_handler(user_id=admin_id, state=NewCity.service5)
async def enter_service5(message: types.Message, state: FSMContext):
    service5 = message.text
    if service5 == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service1}')
        await NewCity.executor11_name.set()
        await state.update_data(item=item)
    elif service5 == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∏–¥ —É—Å–ª—É–≥–∏ ‚Ññ4 —Å–Ω–æ–≤–∞')
        await NewCity.service4.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.service5 = service5

        await message.answer(f'–£—Å–ª—É–≥–∞ {service5} –¥–æ–±–∞–≤–ª–µ–Ω–∞\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service1}\n'
            '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ ‚Ññ5, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor11_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor11_name)
async def enter_executor11_name(message: types.Message, state: FSMContext):
    executor11_name = message.text
    if executor11_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∏–¥ —É—Å–ª—É–≥–∏ ‚Ññ5 —Å–Ω–æ–≤–∞')
        await NewCity.service4.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor11_name = executor11_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor11_name}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor11_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service1}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor11_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor11_pay)
async def enter_executor11_pay(message: types.Message, state: FSMContext):
    executor11_pay = message.text
    if executor11_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —Å–Ω–æ–≤–∞')
        await NewCity.executor11_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor11_pay = executor11_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor11_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor11_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor11_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor11_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor11_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor11_info)
async def enter_executor11_info(message: types.Message, state: FSMContext):
    executor11_info = message.text
    if executor11_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor11_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor11_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor11_info = executor11_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor11_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor11_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor11_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor11_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor11_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor11_sup)
async def enter_executor11_sup(message: types.Message, state: FSMContext):
    executor11_sup = message.text
    if executor11_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor11_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor11_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor11_sup = executor11_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor11_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor11_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service1}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor11_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor21_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor21_name)
async def enter_executor21_name(message: types.Message, state: FSMContext):
    executor21_name = message.text
    if executor21_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service2}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor12_name.set()
        await state.update_data(item=item)
    elif executor21_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor11_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor11_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor21_name = executor21_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor21_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor21_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor21_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor21_pay)
async def enter_executor21_pay(message: types.Message, state: FSMContext):
    executor21_pay = message.text
    if executor21_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —Å–Ω–æ–≤–∞')
        await NewCity.executor21_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor21_pay = executor21_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor21_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor21_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor21_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor21_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor21_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor21_info)
async def enter_executor21_info(message: types.Message, state: FSMContext):
    executor21_info = message.text
    if executor21_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor21_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor21_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor21_info = executor21_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor21_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor21_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor21_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor21_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor21_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor21_sup)
async def enter_executor21_sup(message: types.Message, state: FSMContext):
    executor21_sup = message.text
    if executor21_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor21_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor21_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor21_sup = executor21_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor21_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor21_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor21_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor31_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor31_name)
async def enter_executor31_name(message: types.Message, state: FSMContext):
    executor31_name = message.text
    if executor31_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service2}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor12_name.set()
        await state.update_data(item=item)
    elif executor31_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor21_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor21_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor31_name = executor31_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor31_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor31_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor31_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor31_pay)
async def enter_executor31_pay(message: types.Message, state: FSMContext):
    executor31_pay = message.text
    if executor31_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —Å–Ω–æ–≤–∞')
        await NewCity.executor31_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor31_pay = executor31_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor31_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor31_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor31_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor31_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor31_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor31_info)
async def enter_executor31_info(message: types.Message, state: FSMContext):
    executor31_info = message.text
    if executor31_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor31_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor31_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor31_info = executor31_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor31_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor31_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor31_name} —É—Å–ª—É–≥–∏ {item.service1}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor31_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor31_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor31_sup)
async def enter_executor31_sup(message: types.Message, state: FSMContext):
    executor31_sup = message.text
    if executor31_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor31_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor31_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor31_sup = executor31_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor31_name} —É—Å–ª—É–≥–∏ {item.service1} ‚Äî {executor31_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service2}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor31_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_end)

        await NewCity.executor12_name.set()
        await state.update_data(item=item)


##########################################################################################################
##########################################################################################################


@dp.message_handler(user_id=admin_id, state=NewCity.executor12_name)
async def enter_executor12_name(message: types.Message, state: FSMContext):
    executor12_name = message.text
    if executor12_name == 'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
        data = await state.get_data()
        item: Item = data.get("item")
        await item.create()
        await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
			'–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        await state.reset_state()
    elif executor12_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor31_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor31_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor12_name = executor12_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor12_name}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor12_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service2}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor12_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor12_pay)
async def enter_executor12_pay(message: types.Message, state: FSMContext):
    executor12_pay = message.text
    if executor12_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —Å–Ω–æ–≤–∞')
        await NewCity.executor12_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor12_pay = executor12_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor12_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor12_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor12_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor12_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor12_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor12_info)
async def enter_executor12_info(message: types.Message, state: FSMContext):
    executor12_info = message.text
    if executor12_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor12_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor12_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor12_info = executor12_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor12_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor12_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor12_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor12_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor12_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor12_sup)
async def enter_executor12_sup(message: types.Message, state: FSMContext):
    executor12_sup = message.text
    if executor12_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor12_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor12_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor12_sup = executor12_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor12_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor12_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service2}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor12_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor22_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor22_name)
async def enter_executor22_name(message: types.Message, state: FSMContext):
    executor22_name = message.text
    if executor22_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service3}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor13_name.set()
        await state.update_data(item=item)
    elif executor22_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor12_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor12_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor22_name = executor22_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor22_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor22_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor22_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor22_pay)
async def enter_executor22_pay(message: types.Message, state: FSMContext):
    executor22_pay = message.text
    if executor22_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —Å–Ω–æ–≤–∞')
        await NewCity.executor22_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor22_pay = executor22_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor22_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor22_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor22_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor22_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor22_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor22_info)
async def enter_executor22_info(message: types.Message, state: FSMContext):
    executor22_info = message.text
    if executor22_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor22_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor22_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor22_info = executor22_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor22_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor22_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor22_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor22_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor22_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor22_sup)
async def enter_executor22_sup(message: types.Message, state: FSMContext):
    executor22_sup = message.text
    if executor22_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor22_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor22_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor22_sup = executor22_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor22_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor22_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor22_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor32_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor32_name)
async def enter_executor32_name(message: types.Message, state: FSMContext):
    executor32_name = message.text
    if executor32_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service3}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor13_name.set()
        await state.update_data(item=item)
    elif executor32_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor22_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor22_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor32_name = executor32_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor32_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor32_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor32_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor32_pay)
async def enter_executor32_pay(message: types.Message, state: FSMContext):
    executor32_pay = message.text
    if executor32_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —Å–Ω–æ–≤–∞')
        await NewCity.executor32_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor32_pay = executor32_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor32_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor32_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor32_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor32_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor32_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor32_info)
async def enter_executor32_info(message: types.Message, state: FSMContext):
    executor32_info = message.text
    if executor32_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor32_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor32_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor32_info = executor32_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor32_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor32_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor32_name} —É—Å–ª—É–≥–∏ {item.service2}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor32_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor32_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor32_sup)
async def enter_executor32_sup(message: types.Message, state: FSMContext):
    executor32_sup = message.text
    if executor32_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor32_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor32_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor32_sup = executor32_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor32_name} —É—Å–ª—É–≥–∏ {item.service2} ‚Äî {executor32_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service3}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor32_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_end)

        await NewCity.executor13_name.set()
        await state.update_data(item=item)


##########################################################################################################
##########################################################################################################


@dp.message_handler(user_id=admin_id, state=NewCity.executor13_name)
async def enter_executor13_name(message: types.Message, state: FSMContext):
    executor13_name = message.text
    if executor13_name == 'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
        data = await state.get_data()
        item: Item = data.get("item")
        await item.create()
        await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
			'–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        await state.reset_state()
    elif executor13_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor32_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor32_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor13_name = executor13_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor13_name}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor13_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service3}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor13_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor13_pay)
async def enter_executor13_pay(message: types.Message, state: FSMContext):
    executor13_pay = message.text
    if executor13_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —Å–Ω–æ–≤–∞')
        await NewCity.executor13_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor13_pay = executor13_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor13_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor13_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor13_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor13_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor13_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor13_info)
async def enter_executor13_info(message: types.Message, state: FSMContext):
    executor13_info = message.text
    if executor13_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor13_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor13_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor13_info = executor13_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor13_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor13_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor13_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor13_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor13_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor13_sup)
async def enter_executor13_sup(message: types.Message, state: FSMContext):
    executor13_sup = message.text
    if executor13_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor13_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor13_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor13_sup = executor13_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor13_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor13_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service3}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor13_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor23_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor23_name)
async def enter_executor23_name(message: types.Message, state: FSMContext):
    executor23_name = message.text
    if executor23_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service4}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor14_name.set()
        await state.update_data(item=item)
    elif executor23_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor13_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor13_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor23_name = executor23_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor23_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor23_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor23_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor23_pay)
async def enter_executor23_pay(message: types.Message, state: FSMContext):
    executor23_pay = message.text
    if executor23_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —Å–Ω–æ–≤–∞')
        await NewCity.executor23_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor23_pay = executor23_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor23_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor23_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor23_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor23_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor23_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor23_info)
async def enter_executor23_info(message: types.Message, state: FSMContext):
    executor23_info = message.text
    if executor23_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor23_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor23_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor23_info = executor23_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor23_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor23_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor23_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor23_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor23_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor23_sup)
async def enter_executor23_sup(message: types.Message, state: FSMContext):
    executor23_sup = message.text
    if executor23_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor23_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor23_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor23_sup = executor23_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor23_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor23_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor23_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor33_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor33_name)
async def enter_executor33_name(message: types.Message, state: FSMContext):
    executor33_name = message.text
    if executor33_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service4}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor14_name.set()
        await state.update_data(item=item)
    elif executor33_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor23_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor23_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor33_name = executor33_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor33_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor33_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor33_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor33_pay)
async def enter_executor33_pay(message: types.Message, state: FSMContext):
    executor33_pay = message.text
    if executor33_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —Å–Ω–æ–≤–∞')
        await NewCity.executor33_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor33_pay = executor33_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor33_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor33_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor33_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor33_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor33_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor33_info)
async def enter_executor33_info(message: types.Message, state: FSMContext):
    executor33_info = message.text
    if executor33_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor33_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor33_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor33_info = executor33_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor33_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor33_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor33_name} —É—Å–ª—É–≥–∏ {item.service3}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor33_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor33_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor33_sup)
async def enter_executor33_sup(message: types.Message, state: FSMContext):
    executor33_sup = message.text
    if executor33_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor33_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor33_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor33_sup = executor33_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor33_name} —É—Å–ª—É–≥–∏ {item.service3} ‚Äî {executor33_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service4}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor33_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_end)

        await NewCity.executor14_name.set()
        await state.update_data(item=item)


##########################################################################################################
##########################################################################################################


@dp.message_handler(user_id=admin_id, state=NewCity.executor14_name)
async def enter_executor14_name(message: types.Message, state: FSMContext):
    executor14_name = message.text
    if executor14_name == 'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
        data = await state.get_data()
        item: Item = data.get("item")
        await item.create()
        await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
			'–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        await state.reset_state()
    elif executor14_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor33_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor33_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor14_name = executor14_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor14_name}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor14_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service4}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor14_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor14_pay)
async def enter_executor14_pay(message: types.Message, state: FSMContext):
    executor14_pay = message.text
    if executor14_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —Å–Ω–æ–≤–∞')
        await NewCity.executor14_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor14_pay = executor14_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor14_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor14_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor14_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor14_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor14_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor14_info)
async def enter_executor14_info(message: types.Message, state: FSMContext):
    executor14_info = message.text
    if executor14_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor14_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor14_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor14_info = executor14_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor14_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor14_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor14_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor14_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor14_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor14_sup)
async def enter_executor14_sup(message: types.Message, state: FSMContext):
    executor14_sup = message.text
    if executor14_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor14_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor14_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor14_sup = executor14_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor14_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor14_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service4}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor14_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor24_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor24_name)
async def enter_executor24_name(message: types.Message, state: FSMContext):
    executor24_name = message.text
    if executor24_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service5}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor15_name.set()
        await state.update_data(item=item)
    elif executor24_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor14_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor14_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor24_name = executor24_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor24_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor24_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor24_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor24_pay)
async def enter_executor24_pay(message: types.Message, state: FSMContext):
    executor24_pay = message.text
    if executor24_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —Å–Ω–æ–≤–∞')
        await NewCity.executor24_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor24_pay = executor24_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor24_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor24_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor24_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor24_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor24_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor24_info)
async def enter_executor24_info(message: types.Message, state: FSMContext):
    executor24_info = message.text
    if executor24_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor24_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor24_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor24_info = executor24_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor24_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor24_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor24_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor24_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor24_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor24_sup)
async def enter_executor24_sup(message: types.Message, state: FSMContext):
    executor24_sup = message.text
    if executor24_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor24_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor24_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor24_sup = executor24_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor24_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor24_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor24_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_next)

        await NewCity.executor34_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor34_name)
async def enter_executor34_name(message: types.Message, state: FSMContext):
    executor34_name = message.text
    if executor34_name == '–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥':
        data = await state.get_data()
        item: Item = data.get("item")
        await message.answer(f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service5}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ',
            reply_markup=kb.reply_ed_end)
        await NewCity.executor15_name.set()
        await state.update_data(item=item)
    elif executor34_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor24_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor24_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor34_name = executor34_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor34_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor34_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor34_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor34_pay)
async def enter_executor34_pay(message: types.Message, state: FSMContext):
    executor34_pay = message.text
    if executor34_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —Å–Ω–æ–≤–∞')
        await NewCity.executor34_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor34_pay = executor34_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor34_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor34_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor34_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor34_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor34_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor34_info)
async def enter_executor34_info(message: types.Message, state: FSMContext):
    executor34_info = message.text
    if executor34_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor34_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor34_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor34_info = executor34_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor34_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor34_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor34_name} —É—Å–ª—É–≥–∏ {item.service4}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor34_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor34_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor34_sup)
async def enter_executor34_sup(message: types.Message, state: FSMContext):
    executor34_sup = message.text
    if executor34_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor34_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor34_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor34_sup = executor34_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor34_name} —É—Å–ª—É–≥–∏ {item.service4} ‚Äî {executor34_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service5}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor34_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_end)

        await NewCity.executor15_name.set()
        await state.update_data(item=item)


##########################################################################################################
##########################################################################################################


@dp.message_handler(user_id=admin_id, state=NewCity.executor15_name)
async def enter_executor15_name(message: types.Message, state: FSMContext):
    executor15_name = message.text
    if executor15_name == 'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
        data = await state.get_data()
        item: Item = data.get("item")
        await item.create()
        await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
			'–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        await state.reset_state()
    elif executor15_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor34_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor34_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor15_name = executor15_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor15_name}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor15_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —É—Å–ª—É–≥–∏ {item.service5}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor15_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor15_pay)
async def enter_executor15_pay(message: types.Message, state: FSMContext):
    executor15_pay = message.text
    if executor15_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ1 —Å–Ω–æ–≤–∞')
        await NewCity.executor15_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor15_pay = executor15_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor15_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor15_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor15_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor15_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor15_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor15_info)
async def enter_executor15_info(message: types.Message, state: FSMContext):
    executor15_info = message.text
    if executor15_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor15_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor15_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor15_info = executor15_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor15_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor15_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor15_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor15_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor15_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor15_sup)
async def enter_executor15_sup(message: types.Message, state: FSMContext):
    executor15_sup = message.text
    if executor15_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor15_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor15_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor15_sup = executor15_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor15_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor15_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service5}, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor15_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_end)

        await NewCity.executor25_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor25_name)
async def enter_executor25_name(message: types.Message, state: FSMContext):
    executor25_name = message.text
    if executor25_name == 'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
        data = await state.get_data()
        item: Item = data.get("item")
        await item.create()
        await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
			'–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        await state.reset_state()
    elif executor25_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor15_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor15_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor25_name = executor25_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor25_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor25_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor25_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor25_pay)
async def enter_executor25_pay(message: types.Message, state: FSMContext):
    executor25_pay = message.text
    if executor25_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ2 —Å–Ω–æ–≤–∞')
        await NewCity.executor25_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor25_pay = executor25_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor25_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor25_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor25_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor25_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor25_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor25_info)
async def enter_executor25_info(message: types.Message, state: FSMContext):
    executor25_info = message.text
    if executor25_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor25_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor25_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor25_info = executor25_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor25_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor25_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor25_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor25_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor25_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor25_sup)
async def enter_executor25_sup(message: types.Message, state: FSMContext):
    executor25_sup = message.text
    if executor25_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor25_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor25_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor25_sup = executor25_sup

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor25_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor25_sup}\n'
            f'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –∏–º—è. –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ ‚Äî üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor25_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed_end)

        await NewCity.executor35_name.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor35_name)
async def enter_executor35_name(message: types.Message, state: FSMContext):
    executor35_name = message.text
    if executor35_name == 'üîö –ó–∞–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
        data = await state.get_data()
        item: Item = data.get("item")
        await item.create()
        await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
			'–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        await state.reset_state()
    elif executor35_name == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor25_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor25_sup.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor35_name = executor35_name

        await message.answer(f'–ò–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor35_name}\n'
        f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {executor35_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
        '–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
        reply_markup=kb.reply_ed)

        await NewCity.executor35_pay.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor35_pay)
async def enter_executor35_pay(message: types.Message, state: FSMContext):
    executor35_pay = message.text
    if executor35_pay == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–º—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚Ññ3 —Å–Ω–æ–≤–∞')
        await NewCity.executor35_name.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor35_pay = executor35_pay

        await message.answer(f'C–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor35_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor35_pay}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor35_name} —É—Å–ª—É–≥–∏ {item.service5}\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor35_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor35_info.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor35_info)
async def enter_executor35_info(message: types.Message, state: FSMContext):
    executor35_info = message.text
    if executor35_info == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ c–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor35_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor35_pay.set()
    else:
        data = await state.get_data()
        item: Item = data.get('item')
        item.executor35_info = executor35_info

        await message.answer(f'–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor35_name} —É—Å–ª—É–≥–∏ {item.service5} ‚Äî {executor35_info}\n'
            f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è {item.executor35_name} —É—Å–ª—É–≥–∏ {item.service5}, –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –±—É–¥–µ—Ç –Ω–≤–æ–∑–º–æ–∂–Ω–æ\n'
            f'–•–æ—Ç–∏—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor35_name}, –Ω–∞–∂–º–∏—Ç–µ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            reply_markup=kb.reply_ed)

        await NewCity.executor35_sup.set()
        await state.update_data(item=item)


@dp.message_handler(user_id=admin_id, state=NewCity.executor35_sup)
async def enter_executor35_sup(message: types.Message, state: FSMContext):
    executor35_sup = message.text
    if executor35_sup == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
        data = await state.get_data()
        item: Item = data.get('item')
        await message.answer(f'–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º {item.executor35_name} —Å–Ω–æ–≤–∞')
        await NewCity.executor35_info.set()
    else:
        data = await state.get_data()
        item: Item = data.get("item")
        item.executor35_sup = executor35_sup
        await state.update_data(item=item)
        await item.create()
        await message.answer('–í–≤–µ–¥—ë–Ω—ã–µ –≤–∞–º–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!\n'
            '–ù–∞–∂–º–∏ –Ω–∞ /admin, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        await state.reset_state()